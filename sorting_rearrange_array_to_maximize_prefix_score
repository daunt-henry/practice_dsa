
/*
Problem: Rearrange Array to Maximize Prefix score

You are given an array nums. You have to rearrange the elements 
to maximize the number of positive prefix sums.

A prefix sum is the sum of the first i elements for i from 1 to n.

Return the maximum number of positive prefix sums you can get.

Example:
Input: nums = [2,-1,0,1,-3,3,-3]
Output: 4

Explanation:
Rearrange to [3, 2, 1, 0, -1, -3, -3]
Prefix sums: [3, 5, 6, 6, 5, 2, -1] â†’ 6 prefix sums are non-negative, but only first 4 are positive.
So the result is 4.
*/

#include <stdio.h>
#include <stdlib.h>

// Comparator for descending order
int compare(const void* a, const void* b) {
    return (*(int*)b - *(int*)a);
}

// Core function
int maxScore(int* nums, int numsSize) {
    qsort(nums, numsSize, sizeof(int), compare);
    
    long long sum = 0;
    int count = 0;

    for (int i = 0; i < numsSize; i++) {
        sum += nums[i];
        if (sum > 0) {
            count++;
        } else {
            break;
        }
    }

    return count;
}
